{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"en/","title":"Hello","text":""},{"location":"en/container-security/","title":"Enhance Container Security:","text":"<p>Here are several ways to enhance the security of ruri container, kindly read this document before using ruri.      </p>"},{"location":"en/container-security/#regular","title":"Regular:","text":""},{"location":"en/container-security/#run-rootless-container","title":"Run rootless container:","text":"<p>If your device supports user ns, you can install uidmap and use <code>-r</code> option with common user, so that you can avoid using root privileges to run the container.      </p>"},{"location":"en/container-security/#run-command-in-container-with-common-user","title":"Run command in container with common user:","text":"<p>If you can not run rootless container, there's another choice, add a common user in your container and use <code>-E username</code> to run command as common user instead root.     If you don't need any privileges, it's better to enable no_new_privs at the same time.      </p>"},{"location":"en/container-security/#capabilities","title":"Capabilities:","text":"<p>Ruri will automatically drop unneeded capabilities, but ruri also provides capability control function, you can read capabilities(7) and use <code>-d</code> option to filter out unnecessary capabilities in container.      </p>"},{"location":"en/container-security/#disable-rurienv","title":"Disable .rurienv:","text":"<p>Ruri will create the file /.rurienv in container, to avoid security issues, this file is immutable and read-only.     But you can also disable creating it using <code>-N</code> option.      </p>"},{"location":"en/container-security/#set-memory-limit","title":"Set memory limit:","text":"<p>Ruri supports memory cgroup, you can use <code>-l</code> option to set the limit of memory usage.      </p>"},{"location":"en/container-security/#enable-unshare","title":"Enable unshare:","text":"<p>Ruri supports unshare, it's recommended to enable this feature for better security.     Unshare container will use pivot_root(2) instead chroot(2), so it's more secure.      </p>"},{"location":"en/container-security/#mount-other-mountpoints-as-read-only","title":"Mount other mountpoints as read-only:","text":"<p>Ruri supports using <code>-m</code> option to mount other device/img/dir into container, if you only need read access to the mountpoint, try using <code>-M</code> option to make them read-only.      </p>"},{"location":"en/container-security/#geek","title":"Geek:","text":""},{"location":"en/container-security/#seccomp","title":"Seccomp:","text":"<p>Ruri has a built-in Seccomp profile, you can enable it by using <code>-s</code> option.     If this profile does not fit your needs, you can edit src/seccomp.c and write your own Seccomp rules.      </p>"},{"location":"en/container-security/#radical","title":"Radical:","text":""},{"location":"en/container-security/#no-new-privs","title":"No new privs:","text":"<p>Ruri supports enable no_new_privs bit by <code>-n</code> option, after enabling this, command like <code>sudo</code> will be unavailable for common user.      </p>"},{"location":"en/container-security/#mount-as-read-only","title":"Mount / as read-only:","text":"<p>Ruri supports mounting the rootfs of container as read-only by using <code>-R</code> option, this will make all the container read-only.      </p>"},{"location":"en/container-security/#do-not-create-runtime-dirs","title":"Do not create runtime dirs:","text":"<p>/dev, /proc and /sys will not be mounted if you enable <code>-j</code> option.      </p>"},{"location":"en/container-security/#disable-network","title":"Disable network:","text":"<p>You can use <code>-x</code> option to create a new net ns and disable network for container. This needs net ns and will auto enable unshare.          </p>"},{"location":"en/container-security/#other-built-in-protections","title":"Other built-in protections:","text":""},{"location":"en/container-security/#devices-in-dev","title":"Devices in /dev.","text":"<p>For /dev, ruri will only create necessary devices on it,  so that block devices will always be unavailable in container, and as cap_mknod and cap_sys_admin is dropped by default, you can not escape from ruri container by modifying disk partitions.      </p>"},{"location":"en/container-security/#masked-dirs","title":"Masked dirs:","text":"<p>Ruri will mask some directories with tmpfs in /proc and /sys, this can protect the host to avoid security issues.      </p>"},{"location":"en/container-security/#capabilities_1","title":"Capabilities:","text":"<p>Ruri will drop unneeded capabilities by default, so that it can avoid escaping from container.      </p>"},{"location":"en/quickstart/","title":"Quickstart:","text":""},{"location":"en/quickstart/#get-ruri","title":"Get ruri\uff1a","text":"<p>ruri provides binary for arm64, armv7, armhf, riscv64, i386, loong64, s390x, ppc64le and x86_64 platform\uff0cYou can use the following command to download ruri as ./ruri:      <pre><code>wget -q -O - https://getruri.crack.moe | bash -s -- -s</code></pre></p>"},{"location":"en/quickstart/#get-a-rootfs","title":"Get a rootfs\uff1a","text":""},{"location":"en/quickstart/#use-rurimarecommend","title":"Use rurima\uff08Recommend\uff09\uff1a","text":"<p>Get alpine edge image:    <pre><code>wget -q -O - https://getrurima.crack.moe | bash -s -- -s\nsudo ./rurima lxc pull -o alpine -v edge -s ./test </code></pre> BTW, rurima have a built-in ruri, so you can also use <code>rurima r</code> instead ruri.           </p>"},{"location":"en/quickstart/#use-rootfstooldiscarded","title":"Use rootfstool\uff08Discarded\uff09\uff1a","text":"<p>Get alpine edge image:     <pre><code>git clone https://github.com/Moe-hacker/rootfstool\n./rootfstool/rootfstool download -d alpine -v edge\nmkdir test\nsudo tar -xvf rootfs.tar.xz -C test\nrm rootfs.tar.xz</code></pre></p>"},{"location":"en/quickstart/#set-up-dns","title":"Set up dns\uff1a","text":"<pre><code>sudo rm test/etc/resolv.conf\necho nameserver 1.1.1.1|sudo tee test/etc/resolv.conf</code></pre>"},{"location":"en/quickstart/#run-container","title":"Run container\uff1a","text":"<pre><code>sudo ./ruri ./test</code></pre>"},{"location":"en/quickstart/#thats-all","title":"That's all.","text":""},{"location":"zh/","title":"\u6b22\u8fce\u6765\u5230ruri\u5b98\u65b9wiki","text":"<p>Made with Material for MkDocs</p>"},{"location":"zh/container-security/","title":"\u5982\u4f55\u589e\u5f3a\u5bb9\u5668\u5b89\u5168\uff1a","text":"<p>ruri\u63d0\u4f9b\u4e00\u7cfb\u5217\u5b89\u5168\u9009\u9879\uff0c\u4e0b\u9762\u662f\u5b83\u4eec\u7684\u4f7f\u7528\u8bf4\u660e\uff1a      </p>"},{"location":"zh/container-security/#_2","title":"\u65e5\u5e38\uff1a","text":""},{"location":"zh/container-security/#rootless","title":"\u4f7f\u7528rootless\u5bb9\u5668\uff1a","text":"<p>\u5728\u73b0\u4ee3\u7684GNU/Linux\u4e0a\uff0c\u4e00\u822c\u53ea\u8981\u914d\u7f6e\u597d/etc/subuid\u548c/etc/subgid\uff0c\u5b89\u88c5uidmap\uff08shadow\uff09\u5305\uff0c\u5373\u53ef\u4f7f\u7528rotless\u5bb9\u5668\u3002     \u5982\u679c\u4f60\u7684\u8bbe\u5907\u652f\u6301\uff0c\u53ef\u4ee5\u4f7f\u7528<code>-r</code>\u9009\u9879\u6765\u4ee5\u666e\u901a\u7528\u6237\u8fd0\u884c\u65e0\u7279\u6743\u5bb9\u5668\u3002      </p>"},{"location":"zh/container-security/#_3","title":"\u4f7f\u7528\u666e\u901a\u7528\u6237\uff1a","text":"<p>\u5982\u679c\u4f60\u7684\u8bbe\u5907\u4e0d\u652f\u6301\uff0c\u4f60\u8fd8\u6709\u4e00\u4e2a\u9009\u9879\uff0c\u5728\u5bb9\u5668\u4e2d\u521b\u5efa\u4e00\u4e2a\u666e\u901a\u7528\u6237\uff0c\u5e76\u4f7f\u7528<code>-E username</code>\u9009\u9879\u6765\u4f7f\u7528\u666e\u901a\u7528\u6237\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u547d\u4ee4\u3002\u8bf7\u786e\u4fddusername\u5728\u5bb9\u5668\u7684/etc/passwd\u4e2d\u6709\u6b63\u786e\u8bb0\u5f55\u3002     \u5982\u679c\u4f60\u4e0d\u9700\u8981\u4f7f\u7528sudo\uff0c\u53ef\u4ee5\u540c\u65f6\u5f00\u542fno_new_privs\uff08<code>-n</code>\uff09\u9009\u9879\u3002      </p>"},{"location":"zh/container-security/#unshare","title":"\u5f00\u542funshare\uff1a","text":"<p>ruri\u652f\u6301\u9664\u7f51\u7edc\u5916\u7684\u5e38\u7528\u547d\u540d\u7a7a\u95f4\uff08\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\u4ec5\u7528\u4e8e\u7981\u7528\u7f51\u7edc\uff09\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528<code>-u</code>\u9009\u9879\u5c1d\u8bd5\u5f00\u542f\u652f\u6301\u7684\u547d\u540d\u7a7a\u95f4\u3002     unshare\u529f\u80fd\u81f3\u5c11\u4f9d\u8d56mount ns\uff0c\u5e76\u4f1a\u9ed8\u8ba4\u4f7f\u7528pivot_root(2)\u6765\u66ff\u4ee3chroot(2)\u6765\u63d0\u4f9b\u66f4\u9ad8\u7684\u5b89\u5168\u6027\u3002      </p>"},{"location":"zh/container-security/#capabilities","title":"Capabilities\uff08\u6743\u9650\u96c6\u5408\uff09\uff1a","text":"<p>ruri\u652f\u6301Linux\u7684capability\u63a7\u5236\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528<code>-d cap/num</code>\u6765\u79fb\u9664\u4e00\u4e2acapability\uff0c<code>-k</code>\u6765\u4fdd\u7559\u3002     ruri\u9ed8\u8ba4\u5df2\u7ecf\u79fb\u9664\u4e86\u5927\u90e8\u5206\u53ef\u80fd\u5371\u5bb3\u5bbf\u4e3b\u673a\u7684capability\uff0c\u4f46\u5982\u679c\u4f60\u6709\u5176\u4ed6\u4e0d\u9700\u8981\u7684\u7279\u6743\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u79fb\u9664\u3002      </p>"},{"location":"zh/container-security/#rurienv","title":"\u5173\u95ed.rurienv\u652f\u6301\uff1a","text":"<p>ruri\u9ed8\u8ba4\u4f1a\u5728\u5bb9\u5668\u4e2d\u521b\u5efa<code>/.rurienv</code>\u6765\u7edf\u4e00\u5bb9\u5668\u914d\u7f6e\uff0c\u8fd9\u4efd\u914d\u7f6e\u6587\u4ef6\u901a\u8fc7\u8bbe\u7f6e\u53ea\u8bfb\u5c5e\u6027\uff08immutable\uff09\u548c\u79fb\u9664\u5bb9\u5668\u4fee\u6539\u6b64\u5c5e\u6027\u7684\u7279\u6743\uff08CAP_LINUX_IMMUTABLE\uff09\u6765\u4fdd\u8bc1\u5b89\u5168\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u8fd8\u4e0d\u591f\u5b89\u5168\uff0c\u53ef\u4ee5\u4f7f\u7528<code>-N</code>\u9009\u9879\u7981\u7528\u6b64\u6587\u4ef6\u3002     </p>"},{"location":"zh/container-security/#cpu","title":"\u8bbe\u7f6e\u5185\u5b58/cpu\u9650\u5236:","text":"<p>ruri\u652f\u6301cgroup\u7684memory/cpu/cpuset\u63a7\u5236\u7ec4\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528<code>-l</code>\u9009\u9879\u6765\u8bbe\u7f6e\u8fd9\u4e9b\u9650\u5236\u3002      </p>"},{"location":"zh/container-security/#_4","title":"\u6302\u8f7d\u5916\u90e8\u6302\u8f7d\u70b9\u4e3a\u53ea\u8bfb:","text":"<p>ruri\u652f\u6301\u6302\u8f7d\u5916\u90e8\u6302\u8f7d\u70b9\u4e3a\u53ea\u8bfb\uff0c\u5982\u679c\u4f60\u53ea\u9700\u8981\u8bbf\u95ee\u6587\u4ef6\u800c\u4e0d\u9700\u8981\u4fee\u6539\uff0c\u8bf7\u4f7f\u7528<code>-M</code>\u9009\u9879\u6765\u4ee3\u66ff<code>-m</code>\u9009\u9879\u3002      </p>"},{"location":"zh/container-security/#seccomp","title":"\u5f00\u542fseccomp\uff1a","text":"<p>ruri\u5185\u7f6e\u4e86\u4e00\u4efd\u9ed1\u540d\u5355\u6a21\u5f0fseccomp\u914d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528<code>-s</code>\u9009\u9879\u6765\u5f00\u542f\u5b83\u3002      </p>"},{"location":"zh/container-security/#_5","title":"\u6781\u5ba2:","text":""},{"location":"zh/container-security/#seccomp_1","title":"\u81ea\u5df1\u7f16\u5199Seccomp\u914d\u7f6e\uff1a","text":"<p>ruri\u5185\u7f6e\u7684seccomp\u914d\u7f6e\u8db3\u4ee5\u5e94\u5bf9\u5927\u591a\u5a01\u80c1\uff0c\u4f46\u5982\u679c\u4f60\u9700\u8981\u66f4\u6fc0\u8fdb\u7684\u7b56\u7565\uff0c\u53ef\u4ee5\u624b\u52a8\u7f16\u8f91src/seccomp.c\u6765\u5199\u5165\u81ea\u5df1\u7684\u914d\u7f6e\u6587\u4ef6\u3002      </p>"},{"location":"zh/container-security/#_6","title":"\u6fc0\u8fdb\uff1a","text":""},{"location":"zh/container-security/#no_new_privs","title":"\u5f00\u542fno_new_privs:","text":"<p>\u60a8\u53ef\u4ee5\u4f7f\u7528<code>-n</code>\u9009\u9879\u6765\u5f00\u542fNO_NEW_PRIVS,\u5f00\u542f\u540esudo\u7b49\u7a0b\u5e8f\u5c06\u65e0\u6cd5\u8fd0\u884c\u3002      </p>"},{"location":"zh/container-security/#_7","title":"\u6302\u8f7d\u6839\u76ee\u5f55\u4e3a\u53ea\u8bfb\uff1a","text":"<p>\u60a8\u53ef\u4ee5\u4f7f\u7528<code>-R</code>\u9009\u9879\u6765\u4f7f\u6574\u4e2a\u5bb9\u5668\u6839\u76ee\u5f55\u53ea\u8bfb\u3002\u5f00\u542f\u540e\uff0c/sys\u548c/proc\u4e5f\u5c06\u4e3a\u5b8c\u5168\u53ea\u8bfb\u3002     </p>"},{"location":"zh/container-security/#_8","title":"\u7981\u7528\u7f51\u7edc\uff1a","text":"<p>\u60a8\u53ef\u4ee5\u4f7f\u7528<code>-x</code>\u9009\u9879\u6765\u5b8c\u5168\u7981\u7528\u5bb9\u5668\u7f51\u7edc\uff0c\u8fd9\u9700\u8981NET\u547d\u540d\u7a7a\u95f4\uff0c\u5e76\u4f1a\u81ea\u52a8\u5f00\u542funshare\u3002      </p>"},{"location":"zh/container-security/#_9","title":"\u9ed8\u8ba4\u5b89\u5168\u4fdd\u62a4\uff1a","text":"<p>ruri\u9ed8\u8ba4\u8fd8\u63d0\u4f9b\u5982\u4e0b\u5b89\u5168\u9632\u62a4\uff1a      </p> <ul> <li>/dev\u4e0b\u53ea\u521b\u5efa\u5fc5\u987b\u6587\u4ef6      </li> <li>/sys\u548c/proc\u4e0b\u90e8\u5206\u654f\u611f\u76ee\u5f55/\u6587\u4ef6\u4e3a\u53ea\u8bfb\uff0c\u90e8\u5206\u88ab\u76f4\u63a5\u5c4f\u853d      </li> <li>\u79fb\u9664\u5927\u90e8\u5206\u53ef\u80fd\u5bfc\u81f4\u5371\u5bb3\u5bbf\u4e3b\u673a\u7684\u7279\u6743      </li> </ul>"},{"location":"zh/quickstart/","title":"\u5feb\u901f\u5f00\u59cb","text":""},{"location":"zh/quickstart/#ruri","title":"\u4e0b\u8f7druri\uff1a","text":"<p>ruri\u4e3aarm64, armv7, armhf, riscv64, i386, loong64, s390x, ppc64le\u548cx86_64\u5e73\u53f0\u63d0\u4f9b\u5b98\u65b9\u4e8c\u8fdb\u5236\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u81ea\u52a8\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u4e3a./ruri:      <pre><code>wget -q -O - https://getruri.crack.moe | bash -s -- -s</code></pre></p>"},{"location":"zh/quickstart/#rootfs","title":"\u83b7\u53d6\u4e00\u4e2arootfs\uff1a","text":""},{"location":"zh/quickstart/#rurima","title":"\u4f7f\u7528rurima\uff08\u63a8\u8350\uff09\uff1a","text":"<p>\u83b7\u53d6alpine edge\u955c\u50cf:    <pre><code>wget -q -O - https://getrurima.crack.moe | bash -s -- -s\nsudo ./rurima lxc pull -o alpine -v edge -s ./test </code></pre> BTW, rurima\u5df2\u7ecf\u5b8c\u6574\u5185\u7f6e\u4e86ruri\uff0c\u6240\u4ee5\u4e8b\u5b9e\u4e0a\u5927\u5bb6\u53ea\u9700\u8981\u4e00\u4e2arurima\u7136\u540e<code>rurima r</code>\u5c31\u80fd\u8c03\u7528ruri\u3002     \u6240\u4ee5\u6211\u4eec\u8fd8\u4e0b\u8f7druri\u5e72\u4ec0\u4e48\u5462 </p>"},{"location":"zh/quickstart/#rootfstool","title":"\u4f7f\u7528rootfstool\uff08\u5df2\u5e9f\u5f03\uff09\uff1a","text":"<p>\u83b7\u53d6alpine edge\u955c\u50cf:     <pre><code>git clone https://github.com/Moe-hacker/rootfstool\n./rootfstool/rootfstool download -d alpine -v edge\nmkdir test\nsudo tar -xvf rootfs.tar.xz -C test\nrm rootfs.tar.xz</code></pre></p>"},{"location":"zh/quickstart/#dns","title":"\u914d\u7f6edns\uff1a","text":"<pre><code>sudo rm test/etc/resolv.conf\necho nameserver 1.1.1.1|sudo tee test/etc/resolv.conf</code></pre>"},{"location":"zh/quickstart/#_2","title":"\u8fd0\u884c\u5bb9\u5668\uff1a","text":"<pre><code>sudo ./ruri ./test</code></pre>"},{"location":"zh/quickstart/#_3","title":"\u5b8c\u7ed3\u6492\u82b1\uff5e","text":""}]}